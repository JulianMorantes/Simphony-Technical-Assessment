steps:
  - task: NodeTool@0
    displayName: 'Instalar Node.js'
    inputs:
      versionSpec: '18.x'
    
  - script: npm install
    displayName: 'Instalar dependencias'

  - task: SonarCloudPrepare@1
    condition: eq(variables['enableScanerSonar'], 'true')
    inputs:
      SonarCloud: '$(SonarCloudServiceConnection)'
      organization: '$(sonar_organization)'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: '$(sonar_project_key)'
      cliProjectName: '$(sonar_project_name)'
      cliSources: '.'
      extraProperties: |
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
        sonar.sources=src
        sonar.tests=__tests__

  - script: npm run test -- --coverage
    displayName: 'Run tests with coverage'

  - script: npm run build
    displayName: 'Build de la aplicación'

  - task: SonarCloudAnalyze@1
    condition: eq(variables['enableScanerSonar'], 'true')
    displayName: 'Run SonarCloud Analysis'

  - task: SonarCloudPublish@1
    condition: eq(variables['enableScanerSonar'], 'true')
    displayName: 'Publish SonarCloud Results'
    inputs:
      pollingTimeoutSec: '300'
   
  - task: ArchiveFiles@2
    displayName: 'Empaquetar aplicación en ZIP'
    inputs:
      rootFolderOrFile: 'dist' # o 'build', dependiendo de tu estructura
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
      replaceExistingArchive: true
    

  - task: PublishBuildArtifacts@1
    displayName: 'Publicar artefacto de compilación'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
      ArtifactName: 'app'
      publishLocation: 'Container'
    

